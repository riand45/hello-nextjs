{"ast":null,"code":"import allQuotes from '../../quotes.json';\nexport default ((req, res) => {\n  const {\n    author\n  } = req.query;\n  let quotes = allQuotes;\n\n  if (author) {\n    quotes = quotes.filder(quote => quote.author.toLowerCase().includes(author.toLowerCase()));\n  }\n\n  if (!quotes.length) {\n    quotes = allQuotes.filter(quote => quote.author.toLowerCase() == 'unknown');\n  }\n\n  const quote = quotes[Math.floor(Math.random() * quotes.length)];\n  res.status(200).json(quote);\n});","map":{"version":3,"sources":["/Users/riandpratamaputra/Frontend/hello-next/pages/api/randomQuote.js"],"names":["allQuotes","req","res","author","query","quotes","filder","quote","toLowerCase","includes","length","filter","Math","floor","random","status","json"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mBAAtB;AAEA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAEzB,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAG,CAACG,KAAvB;AACA,MAAIC,MAAM,GAAGL,SAAb;;AAEA,MAAIG,MAAJ,EAAY;AACRE,IAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACJ,MAAN,CAAaK,WAAb,GAA2BC,QAA3B,CAAoCN,MAAM,CAACK,WAAP,EAApC,CAAvB,CAAT;AACH;;AAED,MAAI,CAACH,MAAM,CAACK,MAAZ,EAAoB;AAChBL,IAAAA,MAAM,GAAGL,SAAS,CAACW,MAAV,CAAiBJ,KAAK,IAAIA,KAAK,CAACJ,MAAN,CAAaK,WAAb,MAA8B,SAAxD,CAAT;AACH;;AAED,QAAMD,KAAK,GAAGF,MAAM,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,MAAM,CAACK,MAAlC,CAAD,CAApB;AAEAR,EAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,KAArB;AAEH,CAjBD","sourcesContent":["import allQuotes from '../../quotes.json';\n\nexport default (req, res) => {\n    \n    const { author } = req.query;\n    let quotes = allQuotes;\n\n    if (author) {\n        quotes = quotes.filder(quote => quote.author.toLowerCase().includes(author.toLowerCase()));\n    }\n\n    if (!quotes.length) {\n        quotes = allQuotes.filter(quote => quote.author.toLowerCase() == 'unknown');\n    }\n\n    const quote = quotes[Math.floor(Math.random() * quotes.length)];\n    \n    res.status(200).json(quote);\n    \n};"]},"metadata":{},"sourceType":"module"}