{"ast":null,"code":"var _jsxFileName = \"/Users/riandpratamaputra/Frontend/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\nimport useSWR from 'swr';\nimport useRouter from 'next/router'; // const PostLink = props => (\n//     <li>\n//         <Link href=\"/p/[id]\" as={`/p/${props.id}`} >\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// )\n// const Index = props => (\n//     <Layout >\n//         <h1>Blog</h1>\n//         <div className=\"markdown\">\n//             <Markdown\n//                 source = {\n//                     `\n// This is our blog post. Yes. We can have a [About](/about). And we can have a title as well.\n// ### This is a title\n// And here's the content.\n//                     `\n//                 }\n//             />\n//         </div>\n//         <ul>\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//         <style jsx global>\n//         {`\n//             h1, a {\n//                 font-family: 'Arial';\n//                 font-size: 20px;\n//                 color: red;\n//             }\n//             ul {\n//                 padding: 0;\n//             }\n//             li {\n//                 list-style: none;\n//                 margin: 5px 0;\n//             }\n//             a {\n//                 text-decoration: none;\n//                 color: blue;\n//             }\n//             a:hover {\n//                 opacity: 0.6;\n//             }\n//         `}\n//         </style>\n//     </Layout>\n// )\n// Index.getInitialProps = async function(){\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//     // console.log(`Show data fetched. Count : ${data.length}`);\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useSWR = useSWR(\"/api/randomQuote\".concat(query.author ? '?author=' + query.author : ''), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote';\n  return __jsx(\"main\", {\n    className: \"jsx-3652350086\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3652350086\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-3652350086\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 24\n    }\n  }, \" - \", author), __jsx(_JSXStyle, {\n    id: \"3652350086\",\n    __self: this\n  }, \"main.jsx-3652350086{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-3652350086{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-3652350086{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yaWFuZHByYXRhbWFwdXRyYS9Gcm9udGVuZC9oZWxsby1uZXh0L3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlHZ0IsQUFHK0IsQUFNVSxBQU1HLFVBWFAsVUFNRixHQU1BLEdBWEksUUFNSCxHQU1BLE9BWEcsS0FNRSxHQU1wQixVQVhBLE9BTUEiLCJmaWxlIjoiL1VzZXJzL3JpYW5kcHJhdGFtYXB1dHJhL0Zyb250ZW5kL2hlbGxvLW5leHQvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IEhlYWRlciBmcm9tICcuLi9jb21wb25lbnRzL0hlYWRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJztcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcbmltcG9ydCB1c2VSb3V0ZXIgZnJvbSAnbmV4dC9yb3V0ZXInO1xuXG4vLyBjb25zdCBQb3N0TGluayA9IHByb3BzID0+IChcbi8vICAgICA8bGk+XG4vLyAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Byb3BzLmlkfWB9ID5cbi8vICAgICAgICAgICAgIDxhPntwcm9wcy5pZH08L2E+XG4vLyAgICAgICAgIDwvTGluaz5cbi8vICAgICA8L2xpPlxuLy8gKVxuXG4vLyBjb25zdCBJbmRleCA9IHByb3BzID0+IChcbi8vICAgICA8TGF5b3V0ID5cbi8vICAgICAgICAgPGgxPkJsb2c8L2gxPlxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcmtkb3duXCI+XG4vLyAgICAgICAgICAgICA8TWFya2Rvd25cbi8vICAgICAgICAgICAgICAgICBzb3VyY2UgPSB7XG4vLyAgICAgICAgICAgICAgICAgICAgIGBcbi8vIFRoaXMgaXMgb3VyIGJsb2cgcG9zdC4gWWVzLiBXZSBjYW4gaGF2ZSBhIFtBYm91dF0oL2Fib3V0KS4gQW5kIHdlIGNhbiBoYXZlIGEgdGl0bGUgYXMgd2VsbC5cbi8vICMjIyBUaGlzIGlzIGEgdGl0bGVcbi8vIEFuZCBoZXJlJ3MgdGhlIGNvbnRlbnQuXG4vLyAgICAgICAgICAgICAgICAgICAgIGBcbi8vICAgICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICAvPlxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgPHVsPlxuLy8gICAgICAgICAgICAge3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcbi8vICAgICAgICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbi8vICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuLy8gICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4vLyAgICAgICAgICAgICAgICAgPC9saT5cbi8vICAgICAgICAgICAgICkpfVxuLy8gICAgICAgICA8L3VsPlxuLy8gICAgICAgICA8c3R5bGUganN4IGdsb2JhbD5cbi8vICAgICAgICAge2Bcbi8vICAgICAgICAgICAgIGgxLCBhIHtcbi8vICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbi8vICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4vLyAgICAgICAgICAgICAgICAgY29sb3I6IHJlZDtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIHVsIHtcbi8vICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgbGkge1xuLy8gICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4vLyAgICAgICAgICAgICAgICAgbWFyZ2luOiA1cHggMDtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIGEge1xuLy8gICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbi8vICAgICAgICAgICAgICAgICBjb2xvcjogYmx1ZTtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIGE6aG92ZXIge1xuLy8gICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbi8vICAgICAgICAgICAgIH1cblxuLy8gICAgICAgICBgfVxuLy8gICAgICAgICA8L3N0eWxlPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gKVxuXG4vLyBJbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpe1xuLy8gICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuLy8gICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4vLyAgICAgLy8gY29uc29sZS5sb2coYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudCA6ICR7ZGF0YS5sZW5ndGh9YCk7XG5cbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbi8vICAgICB9O1xuLy8gfTtcblxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcbiAgICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHIgPT4gci5qc29uKCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbiAgICBjb25zdCB7IHF1ZXJ5IH0gPSB1c2VSb3V0ZXIoKTtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoYC9hcGkvcmFuZG9tUXVvdGUke3F1ZXJ5LmF1dGhvciA/ICc/YXV0aG9yPScgKyBxdWVyeS5hdXRob3IgOiAnJ31gLCBmZXRjaGVyKTtcbiAgICBcbiAgICBjb25zdCBhdXRob3IgPSBkYXRhPy5hdXRob3I7XG4gICAgbGV0IHF1b3RlID0gZGF0YT8ucXVvdGU7XG5cbiAgICBpZiAoIWRhdGEpIHF1b3RlID0gJ0xvYWRpbmcuLi4nO1xuICAgIGlmIChlcnJvcikgcXVvdGUgPSAnRmFpbGVkIHRvIGZldGNoIHRoZSBxdW90ZSc7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVcIj57cXVvdGV9PC9kaXY+XG4gICAgICAgICAgICB7YXV0aG9yICYmIDxzcGFuIGNsYXNzTmFtZT1cImF1dGhvclwiPiAtIHsgYXV0aG9yIH08L3NwYW4+fVxuXG4gICAgICAgICAgICA8IHN0eWxlIGpzeCA+IHtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICAgICAgICAgIG1haW4ge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNlMjQzZGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLmF1dGhvciB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzU1OTgzNDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfSA8L3N0eWxlPlxuICAgICAgICA8L21haW4+XG4gICAgKVxufVxuXG4vLyBleHBvcnQgZGVmYXVsdCBJbmRleDsiXX0= */\\n/*@ sourceURL=/Users/riandpratamaputra/Frontend/hello-next/pages/index.js */\"));\n} // export default Index;","map":{"version":3,"sources":["/Users/riandpratamaputra/Frontend/hello-next/pages/index.js"],"names":["Link","Header","Layout","fetch","Markdown","useSWR","useRouter","fetcher","url","then","r","json","Index","query","author","data","error","quote"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOL,KAAK,CAACK,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA,mBACVN,SAAS,EADC;AAAA,MACpBO,KADoB,cACpBA,KADoB;;AAAA,gBAEJR,MAAM,2BAAoBQ,KAAK,CAACC,MAAN,GAAe,aAAaD,KAAK,CAACC,MAAlC,GAA2C,EAA/D,GAAqEP,OAArE,CAFF;AAAA,MAEpBQ,IAFoB,WAEpBA,IAFoB;AAAA,MAEdC,KAFc,WAEdA,KAFc;;AAI5B,MAAMF,MAAM,GAAGC,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAED,MAArB;AACA,MAAIG,KAAK,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAAlB;AAEA,MAAI,CAACF,IAAL,EAAWE,KAAK,GAAG,YAAR;AACX,MAAID,KAAJ,EAAWC,KAAK,GAAG,2BAAR;AAEX,SACI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADJ,EAEKH,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8BA,MAA9B,CAFf;AAAA;AAAA;AAAA,+zKADJ;AA4BH,C,CAED","sourcesContent":["import Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\nimport useSWR from 'swr';\nimport useRouter from 'next/router';\n\n// const PostLink = props => (\n//     <li>\n//         <Link href=\"/p/[id]\" as={`/p/${props.id}`} >\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// )\n\n// const Index = props => (\n//     <Layout >\n//         <h1>Blog</h1>\n//         <div className=\"markdown\">\n//             <Markdown\n//                 source = {\n//                     `\n// This is our blog post. Yes. We can have a [About](/about). And we can have a title as well.\n// ### This is a title\n// And here's the content.\n//                     `\n//                 }\n//             />\n//         </div>\n//         <ul>\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//         <style jsx global>\n//         {`\n//             h1, a {\n//                 font-family: 'Arial';\n//                 font-size: 20px;\n//                 color: red;\n//             }\n//             ul {\n//                 padding: 0;\n//             }\n//             li {\n//                 list-style: none;\n//                 margin: 5px 0;\n//             }\n//             a {\n//                 text-decoration: none;\n//                 color: blue;\n//             }\n//             a:hover {\n//                 opacity: 0.6;\n//             }\n\n//         `}\n//         </style>\n//     </Layout>\n// )\n\n// Index.getInitialProps = async function(){\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n\n//     // console.log(`Show data fetched. Count : ${data.length}`);\n\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n    const { query } = useRouter();\n    const { data, error } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n    \n    const author = data?.author;\n    let quote = data?.quote;\n\n    if (!data) quote = 'Loading...';\n    if (error) quote = 'Failed to fetch the quote';\n\n    return (\n        <main className=\"center\">\n            <div className=\"quote\">{quote}</div>\n            {author && <span className=\"author\"> - { author }</span>}\n\n            < style jsx > {\n                `\n                    main {\n                    width: 90%;\n                    max-width: 900px;\n                    margin: 300px auto;\n                    text-align: center;\n                    }\n                    .quote {\n                    font-family: cursive;\n                    color: #e243de;\n                    font-size: 24px;\n                    padding-bottom: 10px;\n                    }\n                    .author {\n                    font-family: sans-serif;\n                    color: #559834;\n                    font-size: 20px;\n                    }\n                `\n            } </style>\n        </main>\n    )\n}\n\n// export default Index;"]},"metadata":{},"sourceType":"module"}