{"ast":null,"code":"var _jsxFileName = \"/Users/riandpratamaputra/Frontend/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\nimport useSWR from 'swr'; // const PostLink = props => (\n//     <li>\n//         <Link href=\"/p/[id]\" as={`/p/${props.id}`} >\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// )\n// const Index = props => (\n//     <Layout >\n//         <h1>Blog</h1>\n//         <div className=\"markdown\">\n//             <Markdown\n//                 source = {\n//                     `\n// This is our blog post. Yes. We can have a [About](/about). And we can have a title as well.\n// ### This is a title\n// And here's the content.\n//                     `\n//                 }\n//             />\n//         </div>\n//         <ul>\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//         <style jsx global>\n//         {`\n//             h1, a {\n//                 font-family: 'Arial';\n//                 font-size: 20px;\n//                 color: red;\n//             }\n//             ul {\n//                 padding: 0;\n//             }\n//             li {\n//                 list-style: none;\n//                 margin: 5px 0;\n//             }\n//             a {\n//                 text-decoration: none;\n//                 color: blue;\n//             }\n//             a:hover {\n//                 opacity: 0.6;\n//             }\n//         `}\n//         </style>\n//     </Layout>\n// )\n// Index.getInitialProps = async function(){\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//     // console.log(`Show data fetched. Count : ${data.length}`);\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('http://api.tvmaze.com/search/shows?q=girls', fetcher);\n  const numbers = [1, 2, 3, 4, 5];\n  const listItems = numbers.map(number => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, number));\n  console.log(listItems);\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote';\n  return __jsx(\"main\", {\n    className: \"jsx-3652350086\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3652350086\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-3652350086\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }\n  }, \" - \", author), __jsx(_JSXStyle, {\n    id: \"3652350086\",\n    __self: this\n  }, \"main.jsx-3652350086{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-3652350086{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-3652350086{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yaWFuZHByYXRhbWFwdXRyYS9Gcm9udGVuZC9oZWxsby1uZXh0L3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFHZ0IsQUFHK0IsQUFNVSxBQU1HLFVBWFAsVUFNRixHQU1BLEdBWEksUUFNSCxHQU1BLE9BWEcsS0FNRSxHQU1wQixVQVhBLE9BTUEiLCJmaWxlIjoiL1VzZXJzL3JpYW5kcHJhdGFtYXB1dHJhL0Zyb250ZW5kL2hlbGxvLW5leHQvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IEhlYWRlciBmcm9tICcuLi9jb21wb25lbnRzL0hlYWRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJztcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcblxuLy8gY29uc3QgUG9zdExpbmsgPSBwcm9wcyA9PiAoXG4vLyAgICAgPGxpPlxuLy8gICAgICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtwcm9wcy5pZH1gfSA+XG4vLyAgICAgICAgICAgICA8YT57cHJvcHMuaWR9PC9hPlxuLy8gICAgICAgICA8L0xpbms+XG4vLyAgICAgPC9saT5cbi8vIClcblxuLy8gY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4vLyAgICAgPExheW91dCA+XG4vLyAgICAgICAgIDxoMT5CbG9nPC9oMT5cbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZG93blwiPlxuLy8gICAgICAgICAgICAgPE1hcmtkb3duXG4vLyAgICAgICAgICAgICAgICAgc291cmNlID0ge1xuLy8gICAgICAgICAgICAgICAgICAgICBgXG4vLyBUaGlzIGlzIG91ciBibG9nIHBvc3QuIFllcy4gV2UgY2FuIGhhdmUgYSBbQWJvdXRdKC9hYm91dCkuIEFuZCB3ZSBjYW4gaGF2ZSBhIHRpdGxlIGFzIHdlbGwuXG4vLyAjIyMgVGhpcyBpcyBhIHRpdGxlXG4vLyBBbmQgaGVyZSdzIHRoZSBjb250ZW50LlxuLy8gICAgICAgICAgICAgICAgICAgICBgXG4vLyAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgLz5cbi8vICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgIDx1bD5cbi8vICAgICAgICAgICAgIHtwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoXG4vLyAgICAgICAgICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4vLyAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Nob3cuaWR9YH0+XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbi8vICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuLy8gICAgICAgICAgICAgICAgIDwvbGk+XG4vLyAgICAgICAgICAgICApKX1cbi8vICAgICAgICAgPC91bD5cbi8vICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+XG4vLyAgICAgICAgIHtgXG4vLyAgICAgICAgICAgICBoMSwgYSB7XG4vLyAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4vLyAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuLy8gICAgICAgICAgICAgICAgIGNvbG9yOiByZWQ7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB1bCB7XG4vLyAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIGxpIHtcbi8vICAgICAgICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuLy8gICAgICAgICAgICAgICAgIG1hcmdpbjogNXB4IDA7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICBhIHtcbi8vICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4vLyAgICAgICAgICAgICAgICAgY29sb3I6IGJsdWU7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICBhOmhvdmVyIHtcbi8vICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4vLyAgICAgICAgICAgICB9XG5cbi8vICAgICAgICAgYH1cbi8vICAgICAgICAgPC9zdHlsZT5cbi8vICAgICA8L0xheW91dD5cbi8vIClcblxuLy8gSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKXtcbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcbi8vICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuLy8gICAgIC8vIGNvbnNvbGUubG9nKGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQgOiAke2RhdGEubGVuZ3RofWApO1xuXG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4vLyAgICAgfTtcbi8vIH07XG5cbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKXtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoJ2h0dHA6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1naXJscycsIGZldGNoZXIpO1xuXG4gICAgY29uc3QgbnVtYmVycyA9IFsxLCAyLCAzLCA0LCA1XTtcbiAgICBjb25zdCBsaXN0SXRlbXMgPSBudW1iZXJzLm1hcCgobnVtYmVyKSA9PlxuICAgIDxsaT57bnVtYmVyfTwvbGk+XG4gICAgKTtcbiAgICBjb25zb2xlLmxvZyhsaXN0SXRlbXMpO1xuICAgIFxuICAgIGNvbnN0IGF1dGhvciA9IGRhdGE/LmF1dGhvcjtcbiAgICBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZTtcblxuICAgIGlmICghZGF0YSkgcXVvdGUgPSAnTG9hZGluZy4uLic7XG4gICAgaWYgKGVycm9yKSBxdW90ZSA9ICdGYWlsZWQgdG8gZmV0Y2ggdGhlIHF1b3RlJztcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cbiAgICAgICAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+IC0geyBhdXRob3IgfTwvc3Bhbj59XG5cbiAgICAgICAgICAgIDwgc3R5bGUganN4ID4ge1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgICAgICAgICAgbWFpbiB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogOTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC5xdW90ZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAuYXV0aG9yIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjNTU5ODM0O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9IDwvc3R5bGU+XG4gICAgICAgIDwvbWFpbj5cbiAgICApXG59XG5cbi8vIGV4cG9ydCBkZWZhdWx0IEluZGV4OyJdfQ== */\\n/*@ sourceURL=/Users/riandpratamaputra/Frontend/hello-next/pages/index.js */\"));\n} // export default Index;","map":{"version":3,"sources":["/Users/riandpratamaputra/Frontend/hello-next/pages/index.js"],"names":["Link","Header","Layout","fetch","Markdown","useSWR","fetcher","url","then","r","json","Index","data","error","numbers","listItems","map","number","console","log","author","quote"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOJ,KAAK,CAACI,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAgB;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBR,MAAM,CAAC,4CAAD,EAA+CC,OAA/C,CAA9B;AAEA,QAAMQ,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB;AACA,QAAMC,SAAS,GAAGD,OAAO,CAACE,GAAR,CAAaC,MAAD,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAL,CADkB,CAAlB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEA,QAAMK,MAAM,GAAGR,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEQ,MAArB;AACA,MAAIC,KAAK,GAAGT,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAES,KAAlB;AAEA,MAAI,CAACT,IAAL,EAAWS,KAAK,GAAG,YAAR;AACX,MAAIR,KAAJ,EAAWQ,KAAK,GAAG,2BAAR;AAEX,SACI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADJ,EAEKD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8BA,MAA9B,CAFf;AAAA;AAAA;AAAA,m4KADJ;AA4BH,C,CAED","sourcesContent":["import Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\nimport useSWR from 'swr';\n\n// const PostLink = props => (\n//     <li>\n//         <Link href=\"/p/[id]\" as={`/p/${props.id}`} >\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// )\n\n// const Index = props => (\n//     <Layout >\n//         <h1>Blog</h1>\n//         <div className=\"markdown\">\n//             <Markdown\n//                 source = {\n//                     `\n// This is our blog post. Yes. We can have a [About](/about). And we can have a title as well.\n// ### This is a title\n// And here's the content.\n//                     `\n//                 }\n//             />\n//         </div>\n//         <ul>\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//         <style jsx global>\n//         {`\n//             h1, a {\n//                 font-family: 'Arial';\n//                 font-size: 20px;\n//                 color: red;\n//             }\n//             ul {\n//                 padding: 0;\n//             }\n//             li {\n//                 list-style: none;\n//                 margin: 5px 0;\n//             }\n//             a {\n//                 text-decoration: none;\n//                 color: blue;\n//             }\n//             a:hover {\n//                 opacity: 0.6;\n//             }\n\n//         `}\n//         </style>\n//     </Layout>\n// )\n\n// Index.getInitialProps = async function(){\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n\n//     // console.log(`Show data fetched. Count : ${data.length}`);\n\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json());\n}\n\nexport default function Index(){\n    const { data, error } = useSWR('http://api.tvmaze.com/search/shows?q=girls', fetcher);\n\n    const numbers = [1, 2, 3, 4, 5];\n    const listItems = numbers.map((number) =>\n    <li>{number}</li>\n    );\n    console.log(listItems);\n    \n    const author = data?.author;\n    let quote = data?.quote;\n\n    if (!data) quote = 'Loading...';\n    if (error) quote = 'Failed to fetch the quote';\n\n    return (\n        <main className=\"center\">\n            <div className=\"quote\">{quote}</div>\n            {author && <span className=\"author\"> - { author }</span>}\n\n            < style jsx > {\n                `\n                    main {\n                    width: 90%;\n                    max-width: 900px;\n                    margin: 300px auto;\n                    text-align: center;\n                    }\n                    .quote {\n                    font-family: cursive;\n                    color: #e243de;\n                    font-size: 24px;\n                    padding-bottom: 10px;\n                    }\n                    .author {\n                    font-family: sans-serif;\n                    color: #559834;\n                    font-size: 20px;\n                    }\n                `\n            } </style>\n        </main>\n    )\n}\n\n// export default Index;"]},"metadata":{},"sourceType":"module"}