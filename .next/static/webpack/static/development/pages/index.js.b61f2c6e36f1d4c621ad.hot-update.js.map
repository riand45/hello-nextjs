{"version":3,"file":"static/webpack/static/development/pages/index.js.b61f2c6e36f1d4c621ad.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from 'next/link';\nimport Header from '../components/Header';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\n\n// const PostLink = props => (\n//     <li>\n//         <Link href=\"/p/[id]\" as={`/p/${props.id}`} >\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// )\n\nconst Index = props => (\n    <Layout >\n        <h1>Blog</h1>\n        <div className=\"markdown\">\n            <Markdown\n                source = {\n                    `\nThis is our blog post. Yes. We can have a [About](/about). And we can have a title as well.\n### This is a title\nAnd here's the content.\n                    `\n                }\n            />\n        </div>\n        <ul>\n            {props.shows.map(show => (\n                <li key={show.id}>\n                    <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n        <style jsx global>\n        {`\n            h1, a {\n                font-family: 'Arial';\n                font-size: 20px;\n                color: red;\n            }\n            ul {\n                padding: 0;\n            }\n            li {\n                list-style: none;\n                margin: 5px 0;\n            }\n            a {\n                text-decoration: none;\n                color: blue;\n            }\n            a:hover {\n                opacity: 0.6;\n            }\n\n        `}\n        </style>\n    </Layout>\n)\n\nIndex.getInitialProps = async function(){\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n\n    // console.log(`Show data fetched. Count : ${data.length}`);\n\n    return {\n        shows: data.map(entry => entry.show)\n    };\n};\n\n// function fetcher(url) {\n//     return fetch(url).then(r => r.json());\n// }\n\n// export default function Index() {\n    \n//     const { query } = useRouter();\n//     const { data, error } = useSWR(\n//         `/api/randomQuote${query.author ? '?author=' + query.author : ''}`, \n//         fetcher\n//     );\n    \n//     const author = data?.author;\n//     let quote = data?.quote;\n\n//     if (!data) quote = 'Loading...';\n//     if (error) quote = 'Failed to fetch the quote';\n\n//     return (\n//         <main className=\"center\">\n//             <div className=\"quote\">{quote}</div>\n//             {author && <span className=\"author\"> - { author }</span>}\n\n//             < style jsx > {\n//                 `\n//                     main {\n//                     width: 90%;\n//                     max-width: 900px;\n//                     margin: 300px auto;\n//                     text-align: center;\n//                     }\n//                     .quote {\n//                     font-family: cursive;\n//                     color: #e243de;\n//                     font-size: 24px;\n//                     padding-bottom: 10px;\n//                     }\n//                     .author {\n//                     font-family: sans-serif;\n//                     color: #559834;\n//                     font-size: 20px;\n//                     }\n//                 `\n//             } </style>\n//         </main>\n//     )\n// }\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAdA;AAAA;AAAA;AADA;AACA;AAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAOA;AAAA;AAAA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}